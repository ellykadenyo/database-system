

services:
  citus_coordinator:
    env_file:
      - .env
    image: "citusdata/citus:12.1.0"
    container_name: citus_coordinator
    hostname: citus-coordinator
    ports:
      - "${COORDINATOR_PORT}:5432"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      WORKER1_HOST: citus_worker1
      WORKER1_PORT: 5432
      WORKER2_HOST: citus_worker2
      WORKER2_PORT: 5432
      WORKER3_HOST: citus_worker3
      WORKER3_PORT: 5432
      METABASE_DB_USER: "${METABASE_DB_USER}"
      METABASE_DB_PASSWORD: "${METABASE_DB_PASSWORD}"
      PROM_EXPORTER_DB_USER: "${PROM_EXPORTER_DB_USER}"
      PROM_EXPORTER_DB_PASSWORD: "${PROM_EXPORTER_DB_PASSWORD}"
      DATALOADER_DB_USER: "${DATALOADER_DB_USER}"
      DATALOADER_DB_PASSWORD: "${DATALOADER_DB_PASSWORD}"
      PGPOOL_DB_USER: "${PGPOOL_DB_USER}"
      PGPOOL_DB_PASSWORD: "${PGPOOL_DB_PASSWORD}"
    volumes:
      - citus_coordinator_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
      - ./db/coordinator-init.sh:/usr/local/bin/coordinator-init.sh:ro
    command: ["bash","-lc","/usr/local/bin/coordinator-init.sh"]
    depends_on:
      - citus_worker1
      - citus_worker2
      - citus_worker3
    networks:
      - backend

  citus_worker1:
    env_file:
      - .env
    image: "citusdata/citus:12.1.0"
    container_name: citus_worker1
    hostname: citus-worker1
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    volumes:
      - citus_worker1_data:/var/lib/postgresql/data
      - ./db/init/worker-init.sql:/docker-entrypoint-initdb.d/worker-init.sql:ro
    ports:
      - "${WORKER1_PORT}:5432"
    networks:
      - backend

  citus_worker2:
    env_file:
      - .env
    image: "citusdata/citus:12.1.0"
    container_name: citus_worker2
    hostname: citus-worker2
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    volumes:
      - citus_worker2_data:/var/lib/postgresql/data
    ports:
      - "${WORKER2_PORT}:5432"
    networks:
      - backend

  citus_worker3:
    env_file:
      - .env
    image: "citusdata/citus:12.1.0"
    container_name: citus_worker3
    hostname: citus-worker3
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    volumes:
      - citus_worker3_data:/var/lib/postgresql/data
    ports:
      - "${WORKER3_PORT}:5432"
    networks:
      - backend

  # -----------------------------
  # pgPool-II - connection pooling and failover (Bitnami)
  # -----------------------------
  pgpool:
    env_file:
      - .env
    image: "bitnami/pgpool:latest"
    container_name: pgpool
    environment:
      # Backend nodes format: "0:host:port,1:host2:port,2:host3:port"
      # This points pgpool at coordinator + all workers (use service names on the same compose network)
      PGPOOL_BACKEND_NODES: "0:citus_coordinator:5432,1:citus_worker1:5432,2:citus_worker2:5432,3:citus_worker3:5432"

      # Database credentials used by pgpool to connect to backends (these should exist and be valid)
      PGPOOL_POSTGRES_USERNAME: "${POSTGRES_USER}"
      PGPOOL_POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"

      # Pgpool admin user (required by Bitnami image)
      PGPOOL_ADMIN_USERNAME: "${PGPOOL_ADMIN_USERNAME}"
      PGPOOL_ADMIN_PASSWORD: "${PGPOOL_ADMIN_PASSWORD}"

      # Streaming-replication health check user (required)
      PGPOOL_SR_CHECK_USER: "${PGPOOL_SR_CHECK_USER}"
      PGPOOL_SR_CHECK_PASSWORD: "${PGPOOL_SR_CHECK_PASSWORD}"

      # Optional: other pgpool env vars (timeouts, pool size) can be added here
    ports:
      - "${PGPOOL_PORT}:5432"
    volumes:
      - ./db/pgpool:/opt/bitnami/pgpool/conf
    depends_on:
      - citus_coordinator
      - citus_worker1
      - citus_worker2
      - citus_worker3
    networks:
      - backend

  # rest of services unchanged...
  postgres_exporter:
    env_file:
      - .env
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://${PROM_EXPORTER_DB_USER}:${PROM_EXPORTER_DB_PASSWORD}@citus_coordinator:5432/${POSTGRES_DB}?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - citus_coordinator
    networks:
      - backend

  prometheus:
    env_file:
      - .env
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "${PROMETHEUS_PORT}:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
    networks:
      - backend

  grafana:
    env_file:
      - .env
    image: grafana/grafana:9.5.2
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: "admin"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    ports:
      - "${GRAFANA_PORT}:3000"
    depends_on:
      - prometheus
    networks:
      - backend

  metabase:
    env_file:
      - .env
    image: metabase/metabase:latest
    container_name: metabase
    environment:
      MB_DB_TYPE: "postgres"
      MB_DB_DBNAME: "${POSTGRES_DB}"
      MB_DB_PORT: "5432"
      MB_DB_USER: "${METABASE_DB_USER}"
      MB_DB_PASS: "${METABASE_DB_PASSWORD}"
      MB_DB_HOST: "citus_coordinator"
      MB_SETUP_ADMIN_EMAIL: "${METABASE_ADMIN_EMAIL}"
      MB_SETUP_ADMIN_PASSWORD: "${METABASE_ADMIN_PASSWORD}"
    ports:
      - "${METABASE_PORT}:3000"
    depends_on:
      - citus_coordinator
    networks:
      - backend

  dataloader:
    env_file:
      - .env
    image: python:3.11-slim
    container_name: dataloader
    working_dir: /app
    volumes:
      - ./data:/data:ro
      - ./scripts/ingest_helper.py:/app/ingest_helper.py:ro
      - ./scripts/ingest_run.sh:/app/ingest_run.sh:ro
    entrypoint: ["/bin/bash","/app/ingest_run.sh"]
    environment:
      DATALOADER_DB_USER: "${DATALOADER_DB_USER}"
      DATALOADER_DB_PASSWORD: "${DATALOADER_DB_PASSWORD}"
      DATALOADER_DB_HOST: "citus_coordinator"
      DATALOADER_DB_PORT: "5432"
      DATALOADER_DB_NAME: "${POSTGRES_DB}"
    networks:
      - backend

networks:
  backend:

volumes:
  citus_coordinator_data:
  citus_worker1_data:
  citus_worker2_data:
  citus_worker3_data:
  prometheus_data:
  grafana_data: